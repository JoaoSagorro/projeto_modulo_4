@using System.Globalization

@code {
    // Mock user data
    private string adminName = "Joana Silva";

    private int TotalHorses => horses.Count;

    private int SchoolHorses => horses.Count(h => h.UserHorses.StartsWith("Escola", StringComparison.OrdinalIgnoreCase));
    private int UserHorses => horses.Count(h => !h.UserHorses.StartsWith("Escola", StringComparison.OrdinalIgnoreCase));

    public class HorsesData
    {
        public int HorseId { get; set; }
        public string Name { get; set; }
        public string Breed { get; set; }
        public int Age { get; set; }
        public string UserHorses { get; set; }
    }

    private List<HorsesData> horses = new()
{
    new HorsesData { HorseId = 1, Name = "Spirit", Breed = "Breed1", Age = 8, UserHorses = "Escola1" },
    new HorsesData { HorseId = 2, Name = "Luna", Breed = "Breed2", Age = 10, UserHorses = "Carlos Mendes" },
    new HorsesData { HorseId = 3, Name = "Tormenta", Breed = "Breed3", Age = 6, UserHorses = "Escola1" },
    new HorsesData { HorseId = 4, Name = "Bento", Breed = "Breed4", Age = 9, UserHorses = "Pedro Rocha" },
};

    void AddNewHorse()
    {
        // Example: navigate to new horse form
        Console.WriteLine("Add new horse clicked");
        // NavigationManager.NavigateTo("/add-horse");
    }

    void EditHorse(HorsesData horse)
    {
        // You can open a dialog, navigate to another page, or set a state
        Console.WriteLine($"Edit horse: {horse.Name}");
        // Example: NavigationManager.NavigateTo($"/edit-horse/{horse.HorseId}");
    }

    void DeleteHorse(HorsesData horse)
    {
        // Confirm before deleting
        var confirmed = true; // You can add RadzenDialog confirmation here
        if (confirmed)
        {
            horses.Remove(horse);
        }
    }

}

<h2 class="text-3xl font-bold mb-2">Bem-vinda, @adminName</h2>
<br />
<h3 class="text-3xl font-bold mb-2">Gestão de Cavalos</h3>
<p class="text-muted mb-6">Cadastre, edite e remova os cavalos da escola e de proprietários.</p>

<RadzenRow class="rz-mb-4">
    <RadzenColumn Width="50%">
        <RadzenCard Style="border-radius: 8px; width: 100%; height: 100%;">
            <RadzenStack Gap="0.5rem" class="rz-p-4">
                <RadzenText Text="Total de Cavalos" TextStyle="TextStyle.H6" />
                <RadzenText Text="@TotalHorses.ToString()" TextStyle="TextStyle.H4" Style="font-weight: bold;" />
                <RadzenText Text="Cavalos registados na escola" TextStyle="TextStyle.Caption" class="text-muted" />
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Width="50%">
        <RadzenCard Style="border-radius: 8px; width: 100%; height: 100%;">
            <RadzenStack Gap="0.5rem" class="rz-p-4">
                <RadzenText Text="Cavalos da Escola" TextStyle="TextStyle.H6" />
                <RadzenText Text="@SchoolHorses.ToString()" TextStyle="TextStyle.H4" Style="font-weight: bold;" />
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Width="50%">
        <RadzenCard Style="border-radius: 8px; width: 100%; height: 100%;">
            <RadzenStack Gap="0.5rem" class="rz-p-4">
                <RadzenText Text="Cavalos de Proprietário" TextStyle="TextStyle.H6" />
                <RadzenText Text="@UserHorses.ToString()" TextStyle="TextStyle.H4" Style="font-weight: bold;" />
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<div class="grid grid-cols-2 mt-8 mb-4 items-center">
    <h3 class="text-xl font-semibold">Lista de Cavalos</h3>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
        <RadzenButton Text="Novo Cavalo" Icon="add_circle" ButtonStyle="ButtonStyle.Primary" Click="@AddNewHorse" />
    </RadzenStack>
</div>

<RadzenDataGrid Data="@horses" TItem="HorsesData" Style="border-radius: 8px;" Class="w-100">
    <Columns>
        <RadzenDataGridColumn TItem="HorsesData" Property="HorseId" Title="ID" />
        <RadzenDataGridColumn TItem="HorsesData" Property="Name" Title="Nome" />
        <RadzenDataGridColumn TItem="HorsesData" Property="Breed" Title="Raça" />
        <RadzenDataGridColumn TItem="HorsesData" Property="Age" Title="Idade" />
        <RadzenDataGridColumn TItem="HorsesData" Property="UserHorses" Title="Proprietário / Escola" />
        <RadzenDataGridColumn TItem="HorsesData" Title="Ações">
            <Template Context="horse">
                <RadzenButton Icon="edit" Size="ButtonSize.Small" Style="margin-right: 8px;"
                              ButtonStyle="ButtonStyle.Info"
                              Click="@(() => EditHorse(horse))" />
                <RadzenButton Icon="delete" Size="ButtonSize.Small"
                              ButtonStyle="ButtonStyle.Danger"
                              Click="@(() => DeleteHorse(horse))" />
            </Template>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>


