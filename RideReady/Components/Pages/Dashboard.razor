@page "/dashboard"
@using RideReady.Components.Dashboard
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@using Microsoft.IdentityModel.Tokens
@using System.Security.Claims
@attribute [Authorize]

@code
{
    private string userRole { get; set; }
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    List<Claim> Claims { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        authenticationStateTask = AuthStateProvider.GetAuthenticationStateAsync();
        var authState = await authenticationStateTask;
        var user = authState.User;
        userRole = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role).Value;
        Claims = user.Claims.ToList();
    }
}

@switch (userRole)
{
    case "Administrator":
        <AdminDashboard />
        break;
    case "Teacher":
        <TeacherDashboard />
        break;
    case "Student":
        <StudentDashboard />
        break;
    default:
        <p>Role not recognized</p>
        break;
}
