@page "/users"

@using Microsoft.EntityFrameworkCore
@using RepositoryLibrary.Models.DTOs
@using RepositoryLibrary.Services
@using System.Security.Claims
@inject UserService _userService
@inject SchoolService _schoolService
@inject AuthenticationStateProvider AuthenticationStateProvider


<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@users" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedUsers>
    <Columns>
        <RadzenDataGridColumn Title="Photo" Frozen="true" Sortable="false" Filterable="false" Width="80px" TextAlign="TextAlign.Center">
            <Template Context="data">
                <RadzenImage Path="@data.Photo.UserPhoto.ToString()" class="rz-gravatar" AlternateText="@(data.Name + " " + data.Name)" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(UpdateUserDto.Name)" Title="First Name" Frozen="true" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(UpdateUserDto.Email)" Title="Last Name" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(UpdateUserDto.Address)" Title="Job Title" Width="200px" />
        <RadzenDataGridColumn Property="@nameof(UpdateUserDto.Birthdate)" Title="Title" Width="120px" />
        <RadzenDataGridColumn Property="@nameof(UpdateUserDto.CitizenNumber)" Title="Birth Date" FormatString="{0:d}" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(UpdateUserDto.TaxIdentificationNumber)" Title="Hire Date" FormatString="{0:d}" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(UpdateUserDto.SocialHealthNumber)" Title="Address" Width="200px" />
        @* <RadzenDataGridColumn Property="@nameof(Employee.City)" Title="City" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Employee.Region)" Title="Region" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Employee.PostalCode)" Title="Postal Code" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Employee.Country)" Title="Country" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Employee.HomePhone)" Title="Home Phone" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Employee.Extension)" Title="Extension" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Employee.Notes)" Title="Notes" Width="300px" /> *@
    </Columns>
</RadzenDataGrid>

@code {
    List<UpdateUserDto> users;
    IList<UpdateUserDto> selectedUsers;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var auth = AuthenticationStateProvider.GetAuthenticationStateAsync();
        var authState = await auth;
        var user = authState.User;
        var userId = user.Claims.FirstOrDefault(cl => cl.Type == ClaimTypes.NameIdentifier).Value;

        var userSchool = await _schoolService.GetUserSchoolsAsync(userId);

        var schoolId = userSchool.First().SchoolId;

        users = await _userService.GetAllUsers(schoolId);

        selectedUsers = new List<UpdateUserDto>() { users.FirstOrDefault() };
    }
}
