@using RepositoryLibrary.Models.DTOs
@using RepositoryLibrary.Services

@inject Radzen.DialogService dialogService

<RadzenStack Gap="1rem" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%; border: solid red 1px;">
    <RadzenStack Style="border: solid black 1px;">
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="6" class="rz-p-4 rz-border-radius-1" Style="border: var(--rz-grid-cell-border)">
                <RadzenText TextStyle="TextStyle.Subtitle1">Contact</RadzenText>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                    <RadzenImage Path="@(User.Photo is not null ? Convert.ToBase64String(User.Photo.UserPhoto) : "User_default_image/user.png")" Style="width: 80px; height: 80px; border-radius: 50%" AlternateText="@($"{User.FirstName} {User.LastName}")" />
                    <RadzenStack Gap="0" class="rz-text-truncate">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">@User.Roles.First()</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@($"{User.FirstName} {User.LastName}")</b></RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="6" class="rz-p-4 rz-border-radius-1" Style="border: var(--rz-grid-cell-border)">
                <RadzenText TextStyle="TextStyle.Subtitle1">Delivery Information</RadzenText>
                <RadzenStack Gap="0" class="rz-text-truncate">
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Address</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@(User.Address)</b></RadzenText>
                    
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow> 
        <RadzenStack Visible="@ShowClose" Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
            <RadzenButton Click="@((args) => dialogService.Close(true))" Variant="Variant.Flat" Text="Close" Style="width: 120px" />
        </RadzenStack>
    </RadzenStack>
</RadzenStack>

@code {
    [Parameter] public UpdateUserDto User { get; set; } = default!;
    [Parameter] public bool ShowClose { get; set; } = true;

    IEnumerable<UpdateUserDto> userDetails;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        userDetails = new List<UpdateUserDto> { User };
    }
}
